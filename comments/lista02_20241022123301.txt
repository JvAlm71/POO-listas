g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Versão do G++:
Varificando data de envio...
AGORA: 2024-10-22 09:33:49.192094-03:00
PRAZO MÁXIMO: 2024-10-30 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f(0LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f;
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 0.9
Procurando exercício 3...
Exercício 3...
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1156, 3395, 1161);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -2.541714243079455 -0.39513696799320935 12575
mas deu
2 -0.395137 -2.54171 12575

Teste 2 deu errado! +0.042
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1, 1, 1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    Polinomio2 p2(1, 2, 1);
    v = p2.raizes(); for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    Polinomio2 p3(1, -3, 2);
    v = p3.raizes(); for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p3(2) << '\n'; 
    return 0;
}

deveria ser
0.0
7
1.0 -1
9
2.0 1 2
0
mas deu
0 
7
1 -1 
9
2 2 1 
0

Teste 3 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(175, 7211, 115);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -41.18976025118882 -0.015954034525459845 15237
mas deu
2 -0.015954 -41.1898 15237

Teste 4: correto! +0.050
Teste 5 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(4, 3532, 915);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -882.7408639280818 -0.2591360719181921 7995
mas deu
2 -0.259136 -882.741 7995

Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1083, 457, -419);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -0.8678016745291712 0.4458256819160595 4827
mas deu
2 0.445826 -0.867802 4827

Teste 10: correto! +0.050
Teste 11 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1434, 9296, 553);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -6.422522144100803 -0.06004410415582149 24881
mas deu
2 -0.0600441 -6.42252 24881

Teste 12 deu errado! +0.037
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    
    Polinomio2 p2(1,1);
    v = p2.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    return 0;
}

deveria ser
1 0
4
2 -1 0
6
mas deu
1 0 
4
2 0 -1 
6

Teste 13: correto! +0.050
Teste 14 deu errado! +0.013
O resultado para
#include<iostream>
int main() {
    for(int i=0; i<100; i++) {
        Polinomio2 p(0, -306539342, -1561204098);
        std::cout << p(2) << " ";
    }
    return 0;
}
deveria ser
RANDOM 100
mas deu
17 15 19 9 27 16 22 17 13 19 28 20 17 11 6 12 11 20 20 16 24 24 17 22 15 24 26 17 24 16 9 22 24 16 7 11 31 23 16 21 31 16 7 17 17 5 15 11 17 27 25 5 25 9 21 24 6 18 15 15 16 16 12 13 24 4 11 15 22 16 20 12 11 20 19 4 29 30 29 15 9 6 6 18 12 21 19 10 10 15 22 15 26 22 7 24 19 21 22 17 
Teste 15 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1452, 6143, 69);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -4.219453976042982 -0.011262277400544056 18163
mas deu
2 -0.0112623 -4.21945 18163

Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 4: 0.5
Procurando exercício 5...
Exercício 5...
ERRO: A classe deve ter somente os seguintes atributos: _conteudo
Nota exercicio 5: 0.0
Procurando exercício 6...
Procurando exercício 7...
Exercício 7...
ERRO: A classe deve ter somente os seguintes métodos: Fracao
Nota exercicio 7: 0.0
Procurando exercício 8...
Nota total: 3.40
{"scores": {"ex1": 1.0, "ex2": 0.9, "ex3": 1.0, "ex4": 0.5, "ex5": 0.0, "ex6": 0.0, "ex7": 0.0, "ex8": 0.0}}
