g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Versão do G++:
Varificando data de envio...
AGORA: 2024-10-22 10:58:16.937257-03:00
PRAZO MÁXIMO: 2024-10-30 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f(0LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 11 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f;
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 0.9
Procurando exercício 3...
Exercício 3...
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1931, 2442, -964);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -1.5804948488905766 0.31586512335976363 11644
mas deu
2 0.315865 -1.58049 11644

Teste 2 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(246, 2114, -371);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -8.765547938091643 0.17205200313229374 4841
mas deu
2 0.172052 -8.76555 4841

Teste 3 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1275, 542, -932);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -1.0935470206799898 0.6684489814643034 5252
mas deu
2 0.668449 -1.09355 5252

Teste 4: correto! +0.050
Teste 5 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1594, 8434, -22);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -5.293698798213336 0.0026072047378023844 23222
mas deu
2 0.0026072 -5.2937 23222

Teste 6: correto! +0.050
Teste 7 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(295, 2219, 1275);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -6.895217739387209 -0.6268161589178751 6893
mas deu
2 -0.626816 -6.89522 6893

Teste 8 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1783, 6970, 1115);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -3.742026417868739 -0.16711547781269745 22187
mas deu
2 -0.167115 -3.74203 22187

Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(152, 3133, 311);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -20.51209350421674 -0.0997486010464181 7185
mas deu
2 -0.0997486 -20.5121 7185

Teste 16 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1365, 1248, -1576);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -1.6248578679290886 0.7105721536433746 6380
mas deu
2 0.710572 -1.62486 6380

Teste 17: correto! +0.050
Teste 18 deu errado! +0.014
O resultado para
#include<iostream>
int main() {
    for(int i=0; i<100; i++) {
        Polinomio2 p(0, 184227275, -1626124270);
        std::cout << p(2) << " ";
    }
    return 0;
}
deveria ser
RANDOM 100
mas deu
6 14 4 17 28 30 23 6 23 23 9 17 10 5 24 27 13 14 11 10 21 18 25 11 16 11 19 23 10 15 10 23 27 10 9 21 26 26 17 15 17 17 9 16 20 10 15 10 21 25 20 20 19 22 11 9 21 28 24 18 21 21 19 29 12 15 19 8 22 22 23 6 21 17 22 23 23 14 9 30 18 10 7 16 24 18 21 11 22 13 23 21 6 9 27 25 23 17 28 13 
Teste 19 deu errado! +0.037
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    
    Polinomio2 p2(1,1);
    v = p2.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    return 0;
}

deveria ser
1 0
4
2 -1 0
6
mas deu
1 0 
4
2 0 -1 
6

Teste 20 deu errado! +0.042
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1, 1, 1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    Polinomio2 p2(1, 2, 1);
    v = p2.raizes(); for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    Polinomio2 p3(1, -3, 2);
    v = p3.raizes(); for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p3(2) << '\n'; 
    return 0;
}

deveria ser
0.0
7
1.0 -1
9
2.0 1 2
0
mas deu
0 
7
1 -1 
9
2 2 1 
0

Nota exercicio 4: 0.4
Procurando exercício 5...
Exercício 5...
Compilando...
g++ -O2 -Wno-unused-result  "ex5.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 5: 1.0
Procurando exercício 6...
Procurando exercício 7...
Exercício 7...
DEVEM TER ['_numerador', '_denominador']
TEM set()
ERRO: A classe "Fracao" deve ter todos os seguintes atributos: _numerador, _denominador
Nota exercicio 7: 0.0
Procurando exercício 8...
Nota total: 4.30
{"scores": {"ex1": 1.0, "ex2": 0.9, "ex3": 1.0, "ex4": 0.4, "ex5": 1.0, "ex6": 0.0, "ex7": 0.0, "ex8": 0.0}}
