g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Versão do G++:
Varificando data de envio...
AGORA: 2024-10-22 11:03:07.732402-03:00
PRAZO MÁXIMO: 2024-10-30 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f;
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f(0LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 0.9
Procurando exercício 3...
Exercício 3...
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(636, 2581, -809);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -4.350555451452227 0.2923793508232958 6897
mas deu
2 0.292379 -4.35056 6897

Teste 2 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(561, 9929, 998);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -17.597661173256604 -0.10109105490738912 23100
mas deu
2 -0.101091 -17.5977 23100

Teste 3 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(331, 5984, -1387);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -18.307436742569838 0.2288868936272395 11905
mas deu
2 0.228887 -18.3074 11905

Teste 4: correto! +0.050
Teste 5 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1054, 1248, -410);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -1.4519688787936391 0.2679081577310206 6302
mas deu
2 0.267908 -1.45197 6302

Teste 6 deu errado! +0.042
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1, 1, 1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    Polinomio2 p2(1, 2, 1);
    v = p2.raizes(); for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    Polinomio2 p3(1, -3, 2);
    v = p3.raizes(); for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p3(2) << '\n'; 
    return 0;
}

deveria ser
0.0
7
1.0 -1
9
2.0 1 2
0
mas deu
0 
7
1 -1 
9
2 2 1 
0

Teste 7 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1579, 5825, -1341);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -3.9064463249458834 0.2174026264025016 16625
mas deu
2 0.217403 -3.90645 16625

Teste 8 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(701, 1463, -1053);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -2.653183587977658 0.5661650430418521 4677
mas deu
2 0.566165 -2.65318 4677

Teste 9 deu errado! +0.014
O resultado para
#include<iostream>
int main() {
    for(int i=0; i<100; i++) {
        Polinomio2 p(0, 1373915540, 1693210774);
        std::cout << p(2) << " ";
    }
    return 0;
}
deveria ser
RANDOM 100
mas deu
11 11 20 21 23 23 16 21 7 22 13 29 20 20 24 30 14 22 16 23 22 12 23 22 23 19 22 28 26 10 17 21 25 15 21 20 22 18 27 19 16 16 17 19 20 24 15 20 22 22 11 17 16 23 31 19 18 15 28 18 15 23 28 12 21 23 14 19 29 14 10 16 7 20 10 19 4 8 9 24 26 20 18 11 9 15 23 6 12 22 8 12 29 23 20 22 6 14 9 25 
Teste 10 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1549, 26, -1422);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -0.9665584962115713 0.9497734736163486 4826
mas deu
2 0.949773 -0.966558 4826

Teste 11 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(92, 7054, 732);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -76.57000130776926 -0.1039117357089975 15208
mas deu
2 -0.103912 -76.57 15208

Teste 12 deu errado! +0.037
O resultado para
#include<iostream>
int main() {
    double *v;
    Polinomio2 p1(1);
    v = p1.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p1(2) << '\n';
    
    Polinomio2 p2(1,1);
    v = p2.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " ";
    std::cout << '\n' << p2(2) << '\n';
    return 0;
}

deveria ser
1 0
4
2 -1 0
6
mas deu
1 0 
4
2 0 -1 
6

Teste 13 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1655, 2948, -142);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -1.8282006050894146 0.046931722914187984 12374
mas deu
2 0.0469317 -1.8282 12374

Teste 14 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(855, 7889, -1665);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -9.433335355495815 0.20643477070049296 17533
mas deu
2 0.206435 -9.43334 17533

Teste 15: correto! +0.050
Teste 16 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(50, 4019, -286);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -80.45109909080973 0.07109909080973012 7952
mas deu
2 0.0710991 -80.4511 7952

Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(1196, 4377, 1248);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 -3.348029634431768 -0.3116693622237503 14786
mas deu
2 -0.311669 -3.34803 14786

Teste 20: correto! +0.050
Nota exercicio 4: 0.2
Procurando exercício 5...
Exercício 5...
Compilando...
g++ -O2 -Wno-unused-result  "ex5.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 5: 1.0
Procurando exercício 6...
Procurando exercício 7...
Procurando exercício 8...
Exercício 8...
ERRO: Proibido o uso de bibliotecas (numeric), exceto ['stdio.h', 'iostream', 'string']
Nota exercicio 8: 0.0
Nota total: 4.10
{"scores": {"ex1": 1.0, "ex2": 0.9, "ex3": 1.0, "ex4": 0.2, "ex5": 1.0, "ex6": 0.0, "ex7": 0.0, "ex8": 0.0}}
