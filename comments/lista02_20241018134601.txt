g++ (Debian 12.2.0-14) 12.2.0
Copyright (C) 2022 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Versão do G++:
Varificando data de envio...
AGORA: 2024-10-18 10:46:47.520882-03:00
PRAZO MÁXIMO: 2024-10-30 23:59:59-03:06
Testando sua solucao...
Procurando exercício 1...
Exercício 1...
Compilando...
g++ -O2 -Wno-unused-result  "ex1.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 1: 1.0
Procurando exercício 2...
Exercício 2...
Compilando...
g++ -O2 -Wno-unused-result  "ex2.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f;
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17 deu errado! +0.021
O resultado para
#include<iostream>
int main() {
    Fracao f(0LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f+Fracao(1LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(3LL, 2LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f/Fracao(3LL, 4LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f-Fracao(1LL, 6LL);
    std::cout << f << " " << double(f) << std::endl;
    f = f*Fracao(0LL, 99999999999999LL);
    std::cout << f << " " << double(f) << std::endl;
    return 0;
}

deveria ser
0 0.0
1/2 0.5
1 1.0
3/2 1.5
2 2.0
11/6 1.833333
0 0.0
mas deu
0/1 0
1/2 0.5
1/1 1
3/2 1.5
2/1 2
11/6 1.83333
0/1 0

Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 2: 0.9
Procurando exercício 3...
Exercício 3...
Compilando...
g++ -O2 -Wno-unused-result  "ex3.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3: correto! +0.050
Teste 4: correto! +0.050
Teste 5: correto! +0.050
Teste 6: correto! +0.050
Teste 7: correto! +0.050
Teste 8: correto! +0.050
Teste 9: correto! +0.050
Teste 10: correto! +0.050
Teste 11: correto! +0.050
Teste 12: correto! +0.050
Teste 13: correto! +0.050
Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16: correto! +0.050
Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19: correto! +0.050
Teste 20: correto! +0.050
Nota exercicio 3: 1.0
Procurando exercício 4...
Exercício 4...
Compilando...
g++ -O2 -Wno-unused-result  "ex4.cpp" 
Teste 1: correto! +0.050
Teste 2: correto! +0.050
Teste 3 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1072, 4485, -539);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 4.059924352282517 0.12384430443390172 4143
mas deu
2 0.123844 4.05992 4143

Teste 4: correto! +0.050
Teste 5 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-918, 9756, -1227);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 10.50015752753832 0.12729345285383528 14613
mas deu
2 0.127293 10.5002 14613

Teste 6: correto! +0.050
Teste 7 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1893, 2191, 1172);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 1.555455405211076 -0.3980333238587253 -2018
mas deu
2 -0.398033 1.55546 -2018

Teste 8 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1620, 8989, 1268);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 5.686412163787894 -0.1376467316891295 12766
mas deu
2 -0.137647 5.68641 12766

Teste 9 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1567, 9812, 1535);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 6.414362920483844 -0.15271646228346178 14891
mas deu
2 -0.152716 6.41436 14891

Teste 10 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-986, 6823, -43);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 6.913570332884297 0.006307963261747549 9659
mas deu
2 0.00630796 6.91357 9659

Teste 11 deu errado! +0.013
O resultado para
#include<iostream>
int main() {
    for(int i=0; i<100; i++) {
        Polinomio2 p(0, 1217133534, -812522883);
        std::cout << p(2) << " ";
    }
    return 0;
}
deveria ser
RANDOM 100
mas deu
13 6 21 11 13 24 21 24 14 26 17 21 8 20 21 20 17 13 17 19 18 8 11 26 11 14 17 20 12 29 16 18 19 20 15 10 27 10 22 5 21 23 14 12 15 21 12 20 28 16 8 22 20 15 30 16 19 30 23 5 22 20 16 22 19 28 26 19 16 12 15 24 12 12 21 26 20 9 16 21 19 23 11 16 7 18 14 16 21 16 30 22 8 5 15 13 23 11 15 9 
Teste 12 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-703, 9228, 942);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 13.227899178027837 -0.10129889353281536 16586
mas deu
2 -0.101299 13.2279 16586

Teste 13 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1806, 9113, -873);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 4.948269482522875 0.09768843552806673 10129
mas deu
2 0.0976884 4.94827 10129

Teste 14: correto! +0.050
Teste 15: correto! +0.050
Teste 16 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1847, 3966, -887);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 1.8936630512249133 0.2536027852666948 -343
mas deu
2 0.253603 1.89366 -343

Teste 17: correto! +0.050
Teste 18: correto! +0.050
Teste 19 deu errado!
O resultado para
#include<iostream>
int main() {
    Polinomio2 p(-1921, 833, 1465);
    double *v = p.raizes();
    for(int i=0; i<=v[0]; i++) std::cout << v[i] << " " ;
    std::cout << p(2) << std::endl;
    return 0;
}
deveria ser
2.0 1.1166096989529732 -0.6829813803689024 -4553
mas deu
2 -0.682981 1.11661 -4553

Teste 20: correto! +0.050
Nota exercicio 4: 0.4
Procurando exercício 5...
Exercício 5...
ERRO: A classe deve ter somente os seguintes atributos: _conteudo
Nota exercicio 5: 0.0
Procurando exercício 6...
Procurando exercício 7...
Exercício 7...
ERRO: A classe deve ter somente os seguintes métodos: Fracao
Nota exercicio 7: 0.0
Procurando exercício 8...
Nota total: 3.30
{"scores": {"ex1": 1.0, "ex2": 0.9, "ex3": 1.0, "ex4": 0.4, "ex5": 0.0, "ex6": 0.0, "ex7": 0.0, "ex8": 0.0}}
